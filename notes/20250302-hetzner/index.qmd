---
title: "Setup RStudio and Shiny server on your own"
subtitle: "indsæt subtitle"
author: "Christian Knudsen"
visible: "false" # sæt til noget andet når oplægget/noten er færdigt
categories:
  - kategori 1
  - kategori 2
date: 2025-03-02
toc: true
image: ""
---

Is it safe to have your website on a service from the US? Maybe.

Is it safe to run it on a service from a country led by a... somewhat unpredictable... president. Taking advice from people who should either take more Ritalin. Or less ketamine. Perhaps.

Is it a good idea? Probably not.

This site has, and at the time of writing is, hosted on DigitalOcean. Nice service. Affordable. The server is located in Frankfurt (I am here writing to people from the civilised world, so it is unnessecary to specify the country).

But, DigitalOcean is an american company.

So I would like to move it to a service based in a civilised country. Hubby says it should be Hetzner. So here we go.

Begin by signing up at www.hetzner.com. Remember to save your login and password to recover your 2FA-setup.

You might also be asked to verify your identity using a passport, drivers license or other document.

In the upper right hand corner there is the usual small person with information about your account. Next to it there are nine small squares. Click that, and chose "cloud"

You can now make a new project: ![](hetzner1.png) click "Create server": ![](hetzner2.png)

And chose a datacenter with a location you like. I like locations that are in countries not run baboons on ketamine.

![](hetzner3.png) We now need to chose the image we want to install. I prefer Ubuntu - that is the same I'm running at home.

![](hetzner4.png)


Chose a size. Even with a lower payment, I get more compute, memory and storage with the smallest option, than I did at the american service I'm leaving. 

Og så skal vi have amd - for vi får lyst til at installere rstudio, og den er kun tilgængelig
i experimentelle daily builds for arm64. Så... Lidt dyrere. Men

![](hetzner6.png)

Here you should opt in to pay a little bit more for the IPv4-address from the start. Otherwise you will have to click around to find out where to add it later. 

![](hetzner7.png)

![](hetzner08.png)


![](hetzner09.png)


![](hetzner10.png)

![](hetzner11.png)

![](hetzner12.png)

Vi får tilsendt et password, og ssh'er til det ip-nummer vi fik som root.
Passwordet skal skiftes med det samme. 

Så opretter vi en bruger:

adduser nusse
Og tilføjer denne bruger til sudo gruppen:
gpasswd -a nusse sudo 

Og så skifter vi til den bruger:

su - nusse

Så skal der opdateres:
sudo apt update
sudo apt upgrade

Og dernæst installerer vi en webserver_
sudo apt -y install nginx

Det tester vi om virker.

besøg ip-nummeret.

65.108.148.215

Det virker. Vi har en webserver!

Når der laves ændringer i opsætningen kan vi stoppe, starte og genstarte webserveren
med:

sudo service nginx stop
sudo service nginx start
sudo service nginx restart

Så installerer vi R.

sudo apt -y install r-base

Vi tjekker at vi kan køre R:

R

![](R01.png)

Det kan vi. Men det er en ældre version!

Vi starter med at tilføje den nøgle med hvilken vi forventer at R-installationer signeres:
wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | sudo tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc

Verificer nøglen:
gpg --show-keys /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc


Vi bør, jf. 
https://cran.r-project.org/bin/linux/ubuntu/fullREADME.html


få dette fingeraftryk:
E298A3A825C0D65DFD57CBB651716619E084DAB9.



Så tilføjer vi det repo som har 
sudo add-apt-repository "deb [arch=arm64] https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"

sudo apt update

sudo apt upgrade

bom. Så kører vi 4.4.3

Det er en god ide at have devtools installeret. Den har dependencies.

sudo apt -y install libcurl4-gnutls-dev libxml2-dev libssl-dev
den her anbefales også.
sudo apt-get install r-base-dev
Og så kan vi installere pakker. 

for at sikre at det kommer korrekt ind gør vi det på denne måde.

Det gør at pakker installeres som root - og så er de tilgængelige for alle brugere.

Inden er det dog en god ide at installere andree ting. Som 
er nødvendige for at vi overhovedet kan installere devtools.
libfontconfig1-dev
libharfbuzz-dev
libfribidi-dev

libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev 

sudo su - -c "R -e \"install.packages('devtools', repos = 'http://cran.rstudio.com/')\""

Vi kan lige så godt tage tidyverse med det samme. Og shiny.

sudo su - -c "R -e \"install.packages(c('tidyverse', 'shiny'))\""

Vi får sikkert brug for rstudio server. Og for shinyserver. 


Så en dependency først:
sudo apt-get -y install gdebi-core

Vi skal selvfølgelig have seneste version. Den finder vi på
https://posit.co/download/rstudio-server/

pt er det 
wget https://download2.rstudio.org/server/jammy/amd64/rstudio-server-2024.12.1-563-amd64.deb

efterfulgt af 
sudo gdebi rstudio-server-2024.12.1-563-amd64.deb

Og så shinyserver.
Vi har installeret shiny. Og gdebi. 
Så vi går itl 
https://posit.co/download/shiny-server/
og finder

wget https://download3.rstudio.org/ubuntu-20.04/x86_64/shiny-server-1.5.23.1030-amd64.deb

og

sudo gdebi shiny-server-1.5.23.1030-amd64.deb


Og så er vi nået til ca. 8.1 i 
https://deanattali.com/2015/05/09/setup-rstudio-shiny-server-digital-ocean/




Opdatering af ting - 
hent_repos.sh placeres i /usr/local/bin og køres i crontab

#!/bin/bash

# Hent hjemmesiden                                                                                                     
REPO_URL="https://github.com/chrbknudsen/chrbknudsen.github.io.git"                                                     
LOCAL_REPO_PATH="/srv/git/chrbknudsen.github.io"                                                                        
NGINX_PATH="/var/www/html" # eller hvor det nu er den skal være...                                                                                                                                                                              
# Tjek om lokal kopi eksisterer                                                                                         
if [ ! -d "$LOCAL_REPO_PATH/.git" ]; then                                    
echo "Lokalt repo findes ikke - der klones..."
/usr/bin/git clone $REPO_URL $LOCAL_REPO_PATH
else
echo "Opdaterer lokalt repo..."                                            
cd $LOCAL_REPO_PATH            
/usr/bin/git pull origin main                                                
fi                                                                          

# Synkroniserer filer fra mappen til nginx' rodmappe                                                                    
rsync -av --delete  $LOCAL_REPO_PATH/docs/ $NGINX_PATH                                                                                                                                                                                          
echo "Opdatering fuldført."                                                                                                                                                                                                                     
# Hent shiny-apps                                                                                                                                                                                                                               
REPO_URL_SHINY="https://github.com/chrbknudsen/shiny.git"                                                               
LOCAL_REPO_PATH_SHINY="/srv/git/shiny"                                                                                  
SHINY_PATH="/srv/shiny-server"
# Tjek om lokal kopi eksisterer
if [ ! -d "$LOCAL_REPO_PATH_SHINY/.git" ]; then
echo "Lokalt shiny repo findes ikke - der klones..."
/usr/bin/git clone $REPO_URL_SHINY $LOCAL_REPO_PATH_SHINY
else                                                                                                          
echo "Opdaterer lokalt shiny repo..."
echo "skifter katalog"
cd $LOCAL_REPO_PATH_SHINY
echo "katalog skiftet"
/usr/bin/git pull origin main
fi                              
# Synkroniserer filer fra mappen til shiny-servers rodmappe                                                             
sudo -u shinyuser rsync -av --delete --exclude '.git' --exclude '.*' $LOCAL_REPO_PATH_SHINY/ $SHINY_PATH/    

